--Application Setup
--Code Organization
--Controllers, Scope
--Declarative Code in the UI
--Event Listeners



//Setup the application and framework
bower init <appname>
bower search <package>
bower install <package> --save
create bower.json file and setup dependencies
    angular,
    angular-route,
    angular-bootstrap,
    bootstrap-css-only

bower install

NOTE: for those without Bower, point them to the start files

//Bootstrap the application
Create the index.html under src > app folder
    Add scripts
        angular
        angular route
        angular UI
    Add CSS
        Bootstrap CSS
    Add ng-app="devworkshop"  (or something that sounds better)
    Add ng-view for routing


//Setup the Home page and the default route
    Create app.js in src > app
        --Define module 'dwiBTS'
        --Setup the default routing for the home page
    Add in the home page template
    Add <script> to index

//Setup a application level data model
    define the module and dependencies... var app = angular.module('DataModel', []);
    datamodel.js
    Add to app.js
    Add <script> to index

//Create generic module
    Add module1 folder under src > app 
    Add module1.js
    Add module1.tpl.html
    Add script to pagge
    Add module to app.js

//Create a Weather Module
    Add weather folder under src > app
    add weatherService.js
        --hardcode data fetch to weather API
    add weather.js use weatherService to get data
        --add weather service
        --add template
        --add routes
    BUILD List Renderer in directive
        --weatherItemRendere.js
        --Add dependency to app.js
        --Add <script> to index
    Add weather module dependency to app.js
    Add <script> to index

//Add Menu Module
    create menu.js
        --Add menu service
        --add MenuCtrl
    Add dependency to app.js
    Add <script> to index
    update the weather module to add it's menu item

//Add authentication
    Setup routes
    Setup controller
    Setup the on route change listener to enforce security
    Add template

NOTE: CORS in Webstorm we can force in the JB plugin
http://blog.jetbrains.com/webstorm/2013/06/cors-control-in-jetbrains-chrome-extension/
    chrome://extensions/
    http://localhost/*

**We can use http://www.corsproxy.com/

